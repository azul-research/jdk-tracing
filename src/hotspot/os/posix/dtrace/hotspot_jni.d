/*
 * Copyright (c) 2005, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 *  
 */

provider hotspot_jni {
probe AllocObject__entry(void* env, void* clazz);
probe AllocObject__return(void* result);
probe AttachCurrentThreadAsDaemon__entry(void* env, void** penv, void* args);
probe AttachCurrentThreadAsDaemon__return(uint32_t result);
probe AttachCurrentThread__entry(void* env, void** penv, void* args);
probe AttachCurrentThread__return(uint32_t result);
probe CallBooleanMethodA__entry(void* env, void* object, uintptr_t methodID);
probe CallBooleanMethodA__return(uintptr_t result);
probe CallBooleanMethod__entry(void* env, void* object, uintptr_t methodID);
probe CallBooleanMethod__return(uintptr_t result);
probe CallBooleanMethodV__entry(void* env, void* object, uintptr_t methodID);
probe CallBooleanMethodV__return(uintptr_t result);
probe CallByteMethodA__entry(void* env, void* object, uintptr_t methodID);
probe CallByteMethodA__return(char result);
probe CallByteMethod__entry(void* env, void* object, uintptr_t methodID);
probe CallByteMethod__return(char result);
probe CallByteMethodV__entry(void* env, void* object, uintptr_t methodID);
probe CallByteMethodV__return(char result);
probe CallCharMethodA__entry(void* env, void* object, uintptr_t methodID);
probe CallCharMethodA__return(uint16_t result);
probe CallCharMethod__entry(void* env, void* object, uintptr_t methodID);
probe CallCharMethod__return(uint16_t result);
probe CallCharMethodV__entry(void* env, void* object, uintptr_t methodID);
probe CallCharMethodV__return(uint16_t result);
probe CallDoubleMethodA__entry(void* env, void* object, uintptr_t methodID);
probe CallDoubleMethodA__return();
probe CallDoubleMethod__entry(void* env, void* object, uintptr_t methodID);
probe CallDoubleMethod__return();
probe CallDoubleMethodV__entry(void* env, void* object, uintptr_t methodID);
probe CallDoubleMethodV__return();
probe CallFloatMethodA__entry(void* env, void* object, uintptr_t methodID);
probe CallFloatMethodA__return();
probe CallFloatMethod__entry(void* env, void* object, uintptr_t methodID);
probe CallFloatMethod__return();
probe CallFloatMethodV__entry(void* env, void* object, uintptr_t methodID);
probe CallFloatMethodV__return();
probe CallIntMethodA__entry(void* env, void* object, uintptr_t methodID);
probe CallIntMethodA__return(uint32_t result);
probe CallIntMethod__entry(void* env, void* object, uintptr_t methodID);
probe CallIntMethod__return(uint32_t result);
probe CallIntMethodV__entry(void* env, void* object, uintptr_t methodID);
probe CallIntMethodV__return(uint32_t result);
probe CallLongMethodA__entry(void* env, void* object, uintptr_t methodID);
probe CallLongMethodA__return(uintptr_t result);
probe CallLongMethod__entry(void* env, void* object, uintptr_t methodID);
probe CallLongMethod__return(uintptr_t result);
probe CallLongMethodV__entry(void* env, void* object, uintptr_t methodID);
probe CallLongMethodV__return(uintptr_t result);
probe CallNonvirtualBooleanMethodA__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualBooleanMethodA__return(uintptr_t result);
probe CallNonvirtualBooleanMethod__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualBooleanMethod__return(uintptr_t result);
probe CallNonvirtualBooleanMethodV__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualBooleanMethodV__return(uintptr_t result);
probe CallNonvirtualByteMethodA__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualByteMethodA__return(char result);
probe CallNonvirtualByteMethod__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualByteMethod__return(char result);
probe CallNonvirtualByteMethodV__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualByteMethodV__return(char result);
probe CallNonvirtualCharMethodA__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualCharMethodA__return(uint16_t result);
probe CallNonvirtualCharMethod__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualCharMethod__return(uint16_t result);
probe CallNonvirtualCharMethodV__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualCharMethodV__return(uint16_t result);
probe CallNonvirtualDoubleMethodA__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualDoubleMethodA__return();
probe CallNonvirtualDoubleMethod__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualDoubleMethod__return();
probe CallNonvirtualDoubleMethodV__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualDoubleMethodV__return();
probe CallNonvirtualFloatMethodA__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualFloatMethodA__return();
probe CallNonvirtualFloatMethod__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualFloatMethod__return();
probe CallNonvirtualFloatMethodV__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualFloatMethodV__return();
probe CallNonvirtualIntMethodA__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualIntMethodA__return(uint32_t result);
probe CallNonvirtualIntMethod__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualIntMethod__return(uint32_t result);
probe CallNonvirtualIntMethodV__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualIntMethodV__return(uint32_t result);
probe CallNonvirtualLongMethodA__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualLongMethodA__return(uintptr_t result);
probe CallNonvirtualLongMethod__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualLongMethod__return(uintptr_t result);
probe CallNonvirtualLongMethodV__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualLongMethodV__return(uintptr_t result);
probe CallNonvirtualObjectMethodA__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualObjectMethodA__return(void* result);
probe CallNonvirtualObjectMethod__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualObjectMethod__return(void* result);
probe CallNonvirtualObjectMethodV__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualObjectMethodV__return(void* result);
probe CallNonvirtualShortMethodA__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualShortMethodA__return(uint16_t result);
probe CallNonvirtualShortMethod__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualShortMethod__return(uint16_t result);
probe CallNonvirtualShortMethodV__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualShortMethodV__return(uint16_t result);
probe CallNonvirtualVoidMethodA__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualVoidMethodA__return();
probe CallNonvirtualVoidMethod__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualVoidMethod__return();
probe CallNonvirtualVoidMethodV__entry(void* env, void* object, void* class, uintptr_t methodID);
probe CallNonvirtualVoidMethodV__return();
probe CallObjectMethodA__entry(void* env, void* object, uintptr_t methodID);
probe CallObjectMethodA__return(void* result);
probe CallObjectMethod__entry(void* env, void* object, uintptr_t methodID);
probe CallObjectMethod__return(void* result);
probe CallObjectMethodV__entry(void* env, void* object, uintptr_t methodID);
probe CallObjectMethodV__return(void* result);
probe CallShortMethodA__entry(void* env, void* object, uintptr_t methodID);
probe CallShortMethodA__return(uint16_t result);
probe CallShortMethod__entry(void* env, void* object, uintptr_t methodID);
probe CallShortMethod__return(uint16_t result);
probe CallShortMethodV__entry(void* env, void* object, uintptr_t methodID);
probe CallShortMethodV__return(uint16_t result);
probe CallStaticBooleanMethodA__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticBooleanMethodA__return(uintptr_t result);
probe CallStaticBooleanMethod__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticBooleanMethod__return(uintptr_t result);
probe CallStaticBooleanMethodV__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticBooleanMethodV__return(uintptr_t result);
probe CallStaticByteMethodA__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticByteMethodA__return(char result);
probe CallStaticByteMethod__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticByteMethod__return(char result);
probe CallStaticByteMethodV__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticByteMethodV__return(char result);
probe CallStaticCharMethodA__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticCharMethodA__return(uint16_t result);
probe CallStaticCharMethod__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticCharMethod__return(uint16_t result);
probe CallStaticCharMethodV__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticCharMethodV__return(uint16_t result);
probe CallStaticDoubleMethodA__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticDoubleMethodA__return();
probe CallStaticDoubleMethod__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticDoubleMethod__return();
probe CallStaticDoubleMethodV__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticDoubleMethodV__return();
probe CallStaticFloatMethodA__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticFloatMethodA__return();
probe CallStaticFloatMethod__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticFloatMethod__return();
probe CallStaticFloatMethodV__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticFloatMethodV__return();
probe CallStaticIntMethodA__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticIntMethodA__return(uint32_t result);
probe CallStaticIntMethod__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticIntMethod__return(uint32_t result);
probe CallStaticIntMethodV__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticIntMethodV__return(uint32_t result);
probe CallStaticLongMethodA__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticLongMethodA__return(uintptr_t result);
probe CallStaticLongMethod__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticLongMethod__return(uintptr_t result);
probe CallStaticLongMethodV__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticLongMethodV__return(uintptr_t result);
probe CallStaticObjectMethodA__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticObjectMethodA__return(void* result);
probe CallStaticObjectMethod__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticObjectMethod__return(void* result);
probe CallStaticObjectMethodV__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticObjectMethodV__return(void* result);
probe CallStaticShortMethodA__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticShortMethodA__return(uint16_t result);
probe CallStaticShortMethod__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticShortMethod__return(uint16_t result);
probe CallStaticShortMethodV__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticShortMethodV__return(uint16_t result);
probe CallStaticVoidMethodA__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticVoidMethodA__return();
probe CallStaticVoidMethod__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticVoidMethod__return();
probe CallStaticVoidMethodV__entry(void* env, void* class, uintptr_t methodID);
probe CallStaticVoidMethodV__return();
probe CallVoidMethodA__entry(void* env, void* object, uintptr_t methodID);
probe CallVoidMethodA__return();
probe CallVoidMethod__entry(void* env, void* object, uintptr_t methodID);
probe CallVoidMethod__return();
probe CallVoidMethodV__entry(void* env, void* object, uintptr_t methodID);
probe CallVoidMethodV__return();
probe CreateJavaVM__entry(void** vm, void** penv, void* args);
probe CreateJavaVM__return(uint32_t result);
probe DefineClass__entry(void* env, const char* name, void* loaderRef, char* buffer, uintptr_t buffer_len);
probe DefineClass__return(void* result);
probe DeleteGlobalRef__entry(void* env, void* ref);
probe DeleteGlobalRef__return();
probe DeleteLocalRef__entry(void* env, void* obj);
probe DeleteLocalRef__return();
probe DeleteWeakGlobalRef__entry(void* env, void* ref);
probe DeleteWeakGlobalRef__return();
probe DestroyJavaVM__entry(void* vm);
probe DestroyJavaVM__return(uint32_t result);
probe DetachCurrentThread__entry(void* vm);
probe DetachCurrentThread__return(uint32_t result);
probe EnsureLocalCapacity__entry(void* env, uint32_t capacity);
probe EnsureLocalCapacity__return(uint32_t result);
probe ExceptionCheck__entry(void* env);
probe ExceptionCheck__return(uintptr_t result);
probe ExceptionClear__entry(void* env);
probe ExceptionClear__return();
probe ExceptionDescribe__entry(void* env);
probe ExceptionDescribe__return();
probe ExceptionOccurred__entry(void* env);
probe ExceptionOccurred__return(void* result);
probe FatalError__entry(void* env, const char* message);
probe FindClass__entry(void* env, const char* name);
probe FindClass__return(void* result);
probe FromReflectedField__entry(void* env, void* field);
probe FromReflectedField__return(uintptr_t result);
probe FromReflectedMethod__entry(void* env, void* method);
probe FromReflectedMethod__return(uintptr_t result);
probe GetArrayLength__entry(void* env, void* array);
probe GetArrayLength__return(uintptr_t result);
probe GetBooleanArrayElements__entry(void* env, void* array, uintptr_t* isCopy);
probe GetBooleanArrayElements__return(uintptr_t* result);
probe GetBooleanArrayRegion__entry(void* env, void* array, uintptr_t start, uintptr_t len, uintptr_t* buffer);
probe GetBooleanArrayRegion__return();
probe GetBooleanField__entry(void* env, void* obj, uintptr_t field_id);
probe GetBooleanField__return(uintptr_t result);
probe GetByteArrayElements__entry(void* env, void* array, uintptr_t* isCopy);
probe GetByteArrayElements__return(char* result);
probe GetByteArrayRegion__entry(void* env, void* array, uintptr_t start, uintptr_t len, char* buffer);
probe GetByteArrayRegion__return();
probe GetByteField__entry(void* env, void* obj, uintptr_t field_id);
probe GetByteField__return(char result);
probe GetCharArrayElements__entry(void* env, void* array, uintptr_t* isCopy);
probe GetCharArrayElements__return(uint16_t* result);
probe GetCharArrayRegion__entry(void* env, void* array, uintptr_t start, uintptr_t len, uint16_t* buffer);
probe GetCharArrayRegion__return();
probe GetCharField__entry(void* env, void* obj, uintptr_t field_id);
probe GetCharField__return(uint16_t result);
probe GetCreatedJavaVMs__entry(void** vm_buf, uintptr_t buffer_len, uintptr_t* numVMs);
probe GetCreatedJavaVMs__return(uintptr_t result);
probe GetDefaultJavaVMInitArgs__entry(void* args);
probe GetDefaultJavaVMInitArgs__return(uint32_t result);
probe GetDirectBufferAddress__entry(void* env, void* buf);
probe GetDirectBufferAddress__return(void* result);
probe GetDirectBufferCapacity__entry(void* env, void* buf);
probe GetDirectBufferCapacity__return(uintptr_t result);
probe GetDoubleArrayElements__entry(void* env, void* array, uintptr_t* isCopy);
probe GetDoubleArrayElements__return(double* result);
probe GetDoubleArrayRegion__entry(void* env, void* array, uintptr_t start, uintptr_t len, double* buffer);
probe GetDoubleArrayRegion__return();
probe GetDoubleField__entry(void* env, void* obj, uintptr_t field_id);
probe GetDoubleField__return();
probe GetEnv__entry(void* vm, void* penv, uint32_t version);
probe GetEnv__return(uint32_t result);
probe GetFieldID__entry(void* env, void* class, const char* name, const char* signature);
probe GetFieldID__return(uintptr_t result);
probe GetFloatArrayElements__entry(void* env, void* array, uintptr_t* isCopy);
probe GetFloatArrayElements__return(float* result);
probe GetFloatArrayRegion__entry(void* env, void* array, uintptr_t start, uintptr_t len, float* buffer);
probe GetFloatArrayRegion__return();
probe GetFloatField__entry(void* env, void* obj, uintptr_t field_id);
probe GetFloatField__return();
probe GetIntArrayElements__entry(void* env, void* array, uintptr_t* isCopy);
probe GetIntArrayElements__return(uint32_t* result);
probe GetIntArrayRegion__entry(void* env, void* array, uintptr_t start, uintptr_t len, uint32_t* buffer);
probe GetIntArrayRegion__return();
probe GetIntField__entry(void* env, void* obj, uintptr_t field_id);
probe GetIntField__return(uint32_t result);
probe GetJavaVM__entry(void* env, void** vm);
probe GetJavaVM__return(uint32_t result);
probe GetLongArrayElements__entry(void* env, void* array, uintptr_t* isCopy);
probe GetLongArrayElements__return(uintptr_t* result);
probe GetLongArrayRegion__entry(void* env, void* array, uintptr_t start, uintptr_t len, uintptr_t* buffer);
probe GetLongArrayRegion__return();
probe GetLongField__entry(void* env, void* obj, uintptr_t field_id);
probe GetLongField__return(uintptr_t result);
probe GetMethodID__entry(void* env, void* class, const char* name, const char* signature);
probe GetMethodID__return(uintptr_t result);
probe GetModule__entry(void* arg0, void* arg1);
probe GetModule__return(void* result);
probe GetObjectArrayElement__entry(void* env, void* array, uintptr_t index);
probe GetObjectArrayElement__return(void* result);
probe GetObjectClass__entry(void* env, void* obj);
probe GetObjectClass__return(void* result);
probe GetObjectField__entry(void* env, void* obj, uintptr_t field_id);
probe GetObjectField__return(void* result);
probe GetObjectRefType__entry(void* env, void* obj);
probe GetObjectRefType__return(void* result);
probe GetPrimitiveArrayCritical__entry(void* env, void* array, uintptr_t* isCopy);
probe GetPrimitiveArrayCritical__return(void* result);
probe GetShortArrayElements__entry(void* env, void* array, uintptr_t* isCopy);
probe GetShortArrayElements__return(uint16_t* result);
probe GetShortArrayRegion__entry(void* env, void* array, uintptr_t start, uintptr_t len, uint16_t* buffer);
probe GetShortArrayRegion__return();
probe GetShortField__entry(void* env, void* obj, uintptr_t field_id);
probe GetShortField__return(uint16_t result);
probe GetStaticBooleanField__entry(void* env, void* class, uintptr_t field_id);
probe GetStaticBooleanField__return(uintptr_t result);
probe GetStaticByteField__entry(void* env, void* class, uintptr_t field_id);
probe GetStaticByteField__return(char result);
probe GetStaticCharField__entry(void* env, void* class, uintptr_t field_id);
probe GetStaticCharField__return(uint16_t result);
probe GetStaticDoubleField__entry(void* env, void* class, uintptr_t field_id);
probe GetStaticDoubleField__return();
probe GetStaticFieldID__entry(void* env, void* class, const char* name, const char* signature);
probe GetStaticFieldID__return(uintptr_t result);
probe GetStaticFloatField__entry(void* env, void* class, uintptr_t field_id);
probe GetStaticFloatField__return();
probe GetStaticIntField__entry(void* env, void* class, uintptr_t field_id);
probe GetStaticIntField__return(uint32_t result);
probe GetStaticLongField__entry(void* env, void* class, uintptr_t field_id);
probe GetStaticLongField__return(uintptr_t result);
probe GetStaticMethodID__entry(void* env, void* class, const char* name, const char* signature);
probe GetStaticMethodID__return(uintptr_t result);
probe GetStaticObjectField__entry(void* env, void* class, uintptr_t field_id);
probe GetStaticObjectField__return(void* result);
probe GetStaticShortField__entry(void* env, void* class, uintptr_t field_id);
probe GetStaticShortField__return(uint16_t result);
probe GetStringChars__entry(void* env, void* string, uintptr_t* isCopy);
probe GetStringChars__return(const uint16_t* result);
probe GetStringCritical__entry(void* env, void* string, uintptr_t* isCopy);
probe GetStringCritical__return(const uint16_t* result);
probe GetStringLength__entry(void* env, void* int);
probe GetStringLength__return(uintptr_t result);
probe GetStringRegion__entry(void* env, void* array, uintptr_t start, uintptr_t len, uint16_t* buffer);
probe GetStringRegion__return();
probe GetStringUTFChars__entry(void* env, void* string, uintptr_t* isCopy);
probe GetStringUTFChars__return(const char* result);
probe GetStringUTFLength__entry(void* env, void* int);
probe GetStringUTFLength__return(uintptr_t result);
probe GetStringUTFRegion__entry(void* env, void* array, uintptr_t start, uintptr_t len, char* buffer);
probe GetStringUTFRegion__return();
probe GetSuperclass__entry(void* env, void* sub);
probe GetSuperclass__return(void* result);
probe GetVersion__entry(void* env);
probe GetVersion__return(uint32_t result);
probe IsAssignableFrom__entry(void* env, void* sub, void* super);
probe IsAssignableFrom__return(uintptr_t result);
probe IsInstanceOf__entry(void* env, void* obj, void* class);
probe IsInstanceOf__return(uintptr_t result);
probe IsSameObject__entry(void* env, void* r1, void* r2);
probe IsSameObject__return(uintptr_t result);
probe MonitorEnter__entry(void* env, void* jobj);
probe MonitorEnter__return(uint32_t result);
probe MonitorExit__entry(void* env, void* jobj);
probe MonitorExit__return(uint32_t result);
probe NewBooleanArray__entry(void* env, uintptr_t len);
probe NewBooleanArray__return(void* result);
probe NewByteArray__entry(void* env, uintptr_t len);
probe NewByteArray__return(void* result);
probe NewCharArray__entry(void* env, uintptr_t len);
probe NewCharArray__return(void* result);
probe NewDirectByteBuffer__entry(void* env, void* adress, uintptr_t capacity);
probe NewDirectByteBuffer__return(void* result);
probe NewDoubleArray__entry(void* env, uintptr_t len);
probe NewDoubleArray__return(void* result);
probe NewFloatArray__entry(void* env, uintptr_t len);
probe NewFloatArray__return(void* result);
probe NewGlobalRef__entry(void* env, void* ref);
probe NewGlobalRef__return(void* result);
probe NewIntArray__entry(void* env, uintptr_t len);
probe NewIntArray__return(void* result);
probe NewLocalRef__entry(void* env, void* ref);
probe NewLocalRef__return(void* result);
probe NewLongArray__entry(void* env, uintptr_t len);
probe NewLongArray__return(void* result);
probe NewObjectA__entry(void* env, void* class, uintptr_t methodID);
probe NewObjectA__return(void* result);
probe NewObjectArray__entry(void* env, uintptr_t len, void* elementClass, void* initialElement);
probe NewObjectArray__return(void* result);
probe NewObject__entry(void* env, void* class, uintptr_t methodID);
probe NewObject__return(void* result);
probe NewObjectV__entry(void* env, void* class, uintptr_t methodID);
probe NewObjectV__return(void* result);
probe NewShortArray__entry(void* env, uintptr_t len);
probe NewShortArray__return(void* result);
probe NewString__entry(void* env, const uint16_t* unicodeChars, uintptr_t len);
probe NewString__return(void* result);
probe NewStringUTF__entry(void* env, const char* bytes);
probe NewStringUTF__return(void* result);
probe NewWeakGlobalRef__entry(void* env, void* ref);
probe NewWeakGlobalRef__return(void* result);
probe PopLocalFrame__entry(void* env, void* result);
probe PopLocalFrame__return(void* result);
probe PushLocalFrame__entry(void* env, uint32_t capacity);
probe PushLocalFrame__return(uint32_t result);
probe RegisterNatives__entry(void* env, void* class, const void* methods, uint32_t nMethods);
probe RegisterNatives__return(uint32_t result);
probe ReleaseBooleanArrayElements__entry(void* env, void* array, uintptr_t* buf, uint32_t mode);
probe ReleaseBooleanArrayElements__return();
probe ReleaseByteArrayElements__entry(void* env, void* array, char* buf, uint32_t mode);
probe ReleaseByteArrayElements__return();
probe ReleaseCharArrayElements__entry(void* env, void* array, uint16_t* buf, uint32_t mode);
probe ReleaseCharArrayElements__return();
probe ReleaseDoubleArrayElements__entry(void* env, void* array, double* buf, uint32_t mode);
probe ReleaseDoubleArrayElements__return();
probe ReleaseFloatArrayElements__entry(void* env, void* array, float* buf, uint32_t mode);
probe ReleaseFloatArrayElements__return();
probe ReleaseIntArrayElements__entry(void* env, void* array, uint32_t* buf, uint32_t mode);
probe ReleaseIntArrayElements__return();
probe ReleaseLongArrayElements__entry(void* env, void* array, uintptr_t* buf, uint32_t mode);
probe ReleaseLongArrayElements__return();
probe ReleasePrimitiveArrayCritical__entry(void* env, void* array, void* carray, uint32_t mode);
probe ReleasePrimitiveArrayCritical__return();
probe ReleaseShortArrayElements__entry(void* env, void* array, uint16_t* buf, uint32_t mode);
probe ReleaseShortArrayElements__return();
probe ReleaseStringChars__entry(void* env, void* string, const uint16_t* chars);
probe ReleaseStringChars__return();
probe ReleaseStringCritical__entry(void* env, void* string, const uint16_t* chars);
probe ReleaseStringCritical__return();
probe ReleaseStringUTFChars__entry(void* env, void* string, const char* chars);
probe ReleaseStringUTFChars__return();
probe SetBooleanArrayRegion__entry(void* env, void* array, uintptr_t start, uintptr_t len, const uintptr_t* buf);
probe SetBooleanArrayRegion__return();
probe SetBooleanField__entry(void* env, void* obj, uintptr_t fieldID, uintptr_t value);
probe SetBooleanField__return();
probe SetByteArrayRegion__entry(void* env, void* array, uintptr_t start, uintptr_t len, const char* buf);
probe SetByteArrayRegion__return();
probe SetByteField__entry(void* env, void* obj, uintptr_t fieldID, char value);
probe SetByteField__return();
probe SetCharArrayRegion__entry(void* env, void* array, uintptr_t start, uintptr_t len, const uint16_t* buf);
probe SetCharArrayRegion__return();
probe SetCharField__entry(void* env, void* obj, uintptr_t fieldID, uint16_t value);
probe SetCharField__return();
probe SetDoubleArrayRegion__entry(void* env, void* array, uintptr_t start, uintptr_t len, const double* buf);
probe SetDoubleArrayRegion__return();
probe SetDoubleField__entry(void* env, void* obj, uintptr_t fieldID);
probe SetDoubleField__return();
probe SetFloatArrayRegion__entry(void* env, void* array, uintptr_t start, uintptr_t len, const float* buf);
probe SetFloatArrayRegion__return();
probe SetFloatField__entry(void* env, void* obj, uintptr_t fieldID);
probe SetFloatField__return();
probe SetIntArrayRegion__entry(void* env, void* array, uintptr_t start, uintptr_t len, const uint32_t* buf);
probe SetIntArrayRegion__return();
probe SetIntField__entry(void* env, void* obj, uintptr_t fieldID, uint32_t value);
probe SetIntField__return();
probe SetLongArrayRegion__entry(void* env, void* array, uintptr_t start, uintptr_t len, const uintptr_t* buf);
probe SetLongArrayRegion__return();
probe SetLongField__entry(void* env, void* obj, uintptr_t fieldID, uintptr_t value);
probe SetLongField__return();
probe SetObjectArrayElement__entry(void* env, void* array, uintptr_t index, void* value);
probe SetObjectArrayElement__return();
probe SetObjectField__entry(void* env, void* obj, uintptr_t fieldID, void* value);
probe SetObjectField__return();
probe SetShortArrayRegion__entry(void* env, void* array, uintptr_t start, uintptr_t len, const uint16_t* buf);
probe SetShortArrayRegion__return();
probe SetShortField__entry(void* env, void* obj, uintptr_t fieldID, uint16_t value);
probe SetShortField__return();
probe SetStaticBooleanField__entry(void* env, void* obj, uintptr_t fieldID, uintptr_t value);
probe SetStaticBooleanField__return();
probe SetStaticByteField__entry(void* env, void* obj, uintptr_t fieldID, char value);
probe SetStaticByteField__return();
probe SetStaticCharField__entry(void* env, void* obj, uintptr_t fieldID, uint16_t value);
probe SetStaticCharField__return();
probe SetStaticDoubleField__entry(void* env, void* obj, uintptr_t fieldID);
probe SetStaticDoubleField__return();
probe SetStaticFloatField__entry(void* env, void* obj, uintptr_t fieldID);
probe SetStaticFloatField__return();
probe SetStaticIntField__entry(void* env, void* obj, uintptr_t fieldID, uint32_t value);
probe SetStaticIntField__return();
probe SetStaticLongField__entry(void* env, void* obj, uintptr_t fieldID, uintptr_t value);
probe SetStaticLongField__return();
probe SetStaticObjectField__entry(void* env, void* obj, uintptr_t fieldID, void* value);
probe SetStaticObjectField__return();
probe SetStaticShortField__entry(void* env, void* obj, uintptr_t fieldID, uint16_t value);
probe SetStaticShortField__return();
probe Throw__entry(void* env, void* obj);
probe Throw__return(intptr_t result);
probe ThrowNew__entry(void* env, void* class, const char* message);
probe ThrowNew__return(intptr_t result);
probe ToReflectedField__entry(void* env, void* class, uintptr_t field_id, uintptr_t isStatic);
probe ToReflectedField__return(void* result);
probe ToReflectedMethod__entry(void* env, void* class, uintptr_t method_id, uintptr_t isStatic);
probe ToReflectedMethod__return(void* result);
probe UnregisterNatives__entry(void* env, void* clazz);
probe UnregisterNatives__return(uint32_t result);
};

#pragma D attributes Standard/Standard/Common provider hotspot_jni provider
#pragma D attributes Private/Private/Unknown provider hotspot_jni module
#pragma D attributes Private/Private/Unknown provider hotspot_jni function
#pragma D attributes Standard/Standard/Common provider hotspot_jni name
#pragma D attributes Evolving/Evolving/Common provider hotspot_jni args

